# See https://help.github.com/articles/ignoring-files for more about ignoring files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
/.bundle

# Ignore the default SQLite database.
/db/*.sqlite3
/db/*.sqlite3-journal
/db/*.sqlite3-*

# Ignore all logfiles and tempfiles.
/log/*
/tmp/*
!/log/.keep
!/tmp/.keep

# Ignore pidfiles, but keep the directory.
/tmp/pids/*
!/tmp/pids/
!/tmp/pids/.keep

# Ignore uploaded files in development.
/storage/*
!/storage/.keep
/tmp/storage/*
!/tmp/storage/
!/tmp/storage/.keep

# Ignore master key for decrypting credentials and more.
/config/master.key

# Ignore application configuration
/config/application.yml

# Ignore node_modules
node_modules/

# Ignore yarn files
/yarn-error.log
yarn-debug.log*
.yarn-integrity

# Ignore byebug command history file.
.byebug_history

# Ignore Docker volumes
docker-volumes/

# Ignore environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Ignore VS Code settings (optional, remove if you want to share)
.vscode/settings.json

# Ignore macOS
.DS_Store

# Ignore Excel template files (should be managed separately)
sample_v202506.xlsx

# Ignore generated Excel files
勤怠_*.xlsx

# Ignore RubyMine
.idea/

# Ignore coverage reports
/coverage/

# Frontend build artifacts
/frontend/dist/
/frontend/.env.local
/frontend/.env.development.local
/frontend/.env.test.local
/frontend/.env.production.local

# Ignore npm debug logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Ignore pnpm debug log
pnpm-debug.log*

# Ignore Vite build cache
/frontend/.vite/

# Runtime data
pids
*.pid
*.seed
*.pid.lock
